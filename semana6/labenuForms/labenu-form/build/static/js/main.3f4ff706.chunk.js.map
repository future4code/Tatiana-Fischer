{"version":3,"sources":["Components/Etapa1/Etapa1.js","Components/Etapa2/Etapa2.js","Components/Etapa3/Etapa3.js","Components/Final/Final.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Etapa1","React","Component","Etapa2","Etapa3","Final","ContainerApp","Botao","button","App","state","etapa","renderizaEtapa","irParaProximaEtapa","setState","desaparecerBotao","this","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ifAOA,IAAMA,EAAYC,IAAOC,IAAV,KAqCAC,E,uKAvBb,OACE,kBAACH,EAAD,KACM,8BACE,sDACA,iDACA,gCACA,gDACA,gCACA,iDACA,gCACA,yDACA,gCACE,0CACA,8DACA,4DACA,8DACA,mE,GAnBOI,IAAMC,W,6OCV3B,IAAML,EAAYC,IAAOC,IAAV,KA4BAI,E,uKAbb,OACE,kBAAC,EAAD,KACE,8BACC,8EACA,2CACA,gCACA,yDACA,sC,GAVcF,IAAMC,W,yOCX3B,IAAML,EAAYC,IAAOC,IAAV,KAkCAK,E,uKApBb,OACE,kBAAC,EAAD,KACM,8BACE,4EACA,6FACA,gCAEA,uEACA,gCACE,0CACA,oDACA,sDACA,wE,GAfOH,IAAMC,W,4OCb3B,IAAML,EAAYC,IAAOC,IAAV,KAuBAM,E,uKARb,OACE,kBAAC,EAAD,KACM,sDACA,yF,GANUJ,IAAMC,W,oUCR1B,IAAMI,EAAeR,IAAOC,IAAV,KAQZQ,EAAQT,IAAOU,OAAV,KAuDIC,E,4MA7CbC,MAAQ,CACNC,MAAO,G,EAITC,eAAiB,WACf,OAAQ,EAAKF,MAAMC,OACjB,KAAK,EACH,OAAO,kBAAC,EAAD,MAEP,KAAK,EACH,OAAO,kBAAC,EAAD,MAEP,KAAK,EACH,OAAO,kBAAC,EAAD,MAEP,KAAK,EACH,OAAO,kBAAC,EAAD,Q,EAOnBE,mBAAqB,WAChB,EAAKH,MAAMC,OACZ,EAAKG,SAAS,CAAEH,MAAO,EAAKD,MAAMC,MAAQ,K,uDAK9C,IAAMI,EAAwC,IAArBC,KAAKN,MAAMC,MAAe,GAAQ,kBAACJ,EAAD,CAAOU,QAASD,KAAKH,oBAArB,oBAI3D,OAEC,kBAACP,EAAD,KACGU,KAAKJ,iBACJG,O,GAzCWd,IAAMC,WCfJgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3f4ff706.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  background-color: rgb(255,255,255,0.8);\r\n  height: 80vh;\r\n  width: 80vw;\r\n  margin: auto;\r\n`;\r\n\r\n\r\nclass Etapa1 extends React.Component {\r\n\r\n    render(){\r\n  return (\r\n    <Container>\r\n          <form>\r\n            <h1>ETAPA 1 - DADOS GERAIS</h1>\r\n            <p>1.Qual o seu nome?</p>\r\n            <input></input>\r\n            <p>2.Qual sua idade?</p>\r\n            <input></input>\r\n            <p>3. Qual seu email?</p>\r\n            <input></input>\r\n            <p>4.Qual a sua escolaridade?</p>\r\n            <select>\r\n              <option>Nenhum</option>\r\n              <option>Ensino Médio Incompleto</option>\r\n              <option>Ensino Médio Completo</option>\r\n              <option>Ensino Superior Incompleto</option>\r\n              <option>Ensino Superior Completo</option>\r\n            </select>\r\n         </form>\r\n    </Container>\r\n  );\r\n}}\r\n\r\nexport default Etapa1;","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n   display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  background-color: rgb(255,255,255,0.8);\r\n  height: 60vh;\r\n  width: 80vw;\r\n  margin: auto;\r\n \r\n`;\r\n\r\n\r\nclass Etapa2 extends React.Component {\r\n\r\n    render(){\r\n  return (\r\n    <Container>\r\n      <form>\r\n       <h1>ETAPA 2 - INFORMAÇÕES DE ENSINO SUPERIOR</h1>\r\n       <p> Qual curso?</p>\r\n       <input></input>\r\n       <p> Qual a unidade de ensino?</p>\r\n       <input></input>\r\n     </form>\r\n    </Container>\r\n  );\r\n}}\r\n\r\nexport default Etapa2;\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  background-color: rgb(255,255,255,0.8);\r\n  height: 60vh;\r\n  width: 80vw;\r\n  margin: auto;\r\n`;\r\n\r\n\r\nclass Etapa3 extends React.Component {\r\n\r\n    render(){\r\n  return (\r\n    <Container>\r\n          <form>\r\n            <h1>ETAPA 3 - INFORMAÇÕES GERAIS DE ENSINO</h1>\r\n            <p>5.Por que você não terminou um curso de graduação?</p>\r\n            <input></input>\r\n            \r\n            <p>6. Você fez algum curso complementar?</p>\r\n            <select>\r\n              <option>Nenhum</option>\r\n              <option>Curso técnico</option>\r\n              <option>Curso de inglês</option>\r\n              <option>Não fiz curso complementar</option>\r\n                \r\n            </select>\r\n         </form>\r\n    </Container>\r\n  );\r\n}}\r\n\r\nexport default Etapa3;","import React from 'react';\r\n\r\n\r\n\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  \r\n  flex-direction: column;\r\n  text-align: center;\r\n  background-color: rgb(255,255,255,0.8);\r\n  height: 60vh;\r\n  width: 80vw;\r\n  margin: auto;\r\n`;\r\n\r\n\r\nclass Final extends React.Component {\r\n\r\n    render(){\r\n  return (\r\n    <Container>\r\n          <h1>O FORMULÁRIO ACABOU</h1>\r\n          <p>Muito obrigado por participar! Entraremos em contato!</p>\r\n    </Container>\r\n  );\r\n}}\r\n\r\nexport default Final;","import React from 'react';\n\n\nimport Etapa1 from './Components/Etapa1/Etapa1';\nimport Etapa2 from './Components/Etapa2/Etapa2';\nimport Etapa3 from './Components/Etapa3/Etapa3';\nimport Final from './Components/Final/Final';\n\n\nimport styled from 'styled-components';\n\nconst ContainerApp = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: rgb(0,0,0,0.9);\n  height: 100vh;\n  \n`\n\nconst Botao = styled.button`\n  margin: auto;\n  width: 80px;\n  padding: 5px;\n  margin-top: 20px;\n \n  \n`\nclass App extends React.Component {\n\n  state = {\n    etapa: 1,\n    \n  }\n\n  renderizaEtapa = () => {\n    switch (this.state.etapa) {\n      case 1:\n        return <Etapa1 />\n        \n        case 2:\n          return <Etapa2 />\n                  \n          case 3:\n            return <Etapa3 />\n                   \n            case 4:\n              return <Final />\n                      \n      default:\n        break;\n    }\n  }\n \n  irParaProximaEtapa = () => {\n    if(this.state.etapa) {\n      this.setState({ etapa: this.state.etapa + 1 })\n      \n    }\n  }\n  render() {\n  const desaparecerBotao = this.state.etapa === 4 ? (\"\") : ( <Botao onClick={this.irParaProximaEtapa}>\n    Próxima Etapa \n    </Botao>)\n  \n  return (\n  \n   <ContainerApp>\n     {this.renderizaEtapa()}\n     { desaparecerBotao }\n    \n  </ContainerApp>\n  );\n}}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}