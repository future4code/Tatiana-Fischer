{"version":3,"sources":["App.js","index.js"],"names":["TarefaList","styled","ul","_templateObject","Tarefa","li","_templateObject2","completa","InputsContainer","div","_templateObject3","App","React","Component","[object Object]","args","super","this","state","tarefas","inputValue","filter","onChangeInput","event","setState","target","value","criaTarefa","novaTarefa","id","Date","now","texto","novaListaTarefas","selectTarefa","listaTarefasCompletas","map","tarefa","index","array","tarefasCompletas","Object","objectSpread2","console","log","onChangeFilter","componentDidUpdate","componentDidMount","render","listaFiltrada","react_default","a","createElement","className","onChange","onClick","rootElement","document","getElementById","ReactDOM","src_App"],"mappings":"ykBAIA,MAAMA,EAAaC,IAAOC,GAAVC,KAMVC,EAASH,IAAOI,GAAVC,IAES,EAAEC,cAAeA,EAAW,eAAiB,QAI5DC,EAAkBP,IAAOQ,IAAVC,KAsHNC,MA/Gf,cAAkBC,IAAMC,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,KAC9BC,MAAQ,CACJC,QAAS,GAQXC,WAAY,GACZC,OAAQ,IAXoBJ,KAsBhCK,cAAiBC,KACfN,KAAKO,SAAS,CAAEJ,WAAYG,EAAME,OAAOC,UAvBXT,KA0BhCU,WAAa,MACX,MAAMC,EAAa,CACjBC,GAAIC,KAAKC,MACTC,MAAOf,KAAKC,MAAME,WAClBb,UAAU,GAEN0B,EAAmB,IAAIhB,KAAKC,MAAMC,QAASS,GAEhDX,KAAKO,SAAS,CAAEL,QAASc,IACzBhB,KAAKC,MAAME,WAAa,KAnCKH,KAsChCiB,aAAgBL,KAEf,MAAMM,EAAwBlB,KAAKC,MAAMC,QAAQiB,IAAI,CAACC,EAAQC,EAAOC,KACnE,GAAGV,IAAOQ,EAAOR,GAAI,CACnB,MAAMW,EAAgBC,OAAAC,EAAA,EAAAD,CAAA,GAElBJ,EAFkB,CAGrB9B,UAAW8B,EAAO9B,WAInB,OADAoC,QAAQC,IAAIJ,GACLA,EAEP,OAAOH,IAIZpB,KAAKO,SAAS,CAACL,QAASgB,MAvDQlB,KA0DhC4B,eAAkBtB,KAChBN,KAAKO,SAAS,CAAEH,OAAQE,EAAME,OAAOC,UA7CvCoB,sBAIAC,qBA4CAC,SACEL,QAAQC,IAAI3B,KAAKC,MAAMC,SACvB,MAAM8B,EAAgBhC,KAAKC,MAAMC,QAC9BE,OAAOgB,IACN,OAAQpB,KAAKC,MAAMG,QACjB,IAAK,YACH,OAAQgB,EAAO9B,SACjB,IAAK,YACH,OAAO8B,EAAO9B,SAChB,QACE,OAAO,KAIf,OACE2C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC5C,EAAD,KACE0C,EAAAC,EAAAC,cAAA,SAAO1B,MAAOT,KAAKC,MAAME,WAAYkC,SAAUrC,KAAKK,gBACpD4B,EAAAC,EAAAC,cAAA,UAAQG,QAAStC,KAAKU,YAAtB,cAEFuB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC5C,EAAD,KACE0C,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQ1B,MAAOT,KAAKC,MAAMG,OAAQiC,SAAUrC,KAAK4B,gBAC/CK,EAAAC,EAAAC,cAAA,UAAQ1B,MAAM,IAAd,UACAwB,EAAAC,EAAAC,cAAA,UAAQ1B,MAAM,aAAd,aACAwB,EAAAC,EAAAC,cAAA,UAAQ1B,MAAM,aAAd,eAGJwB,EAAAC,EAAAC,cAACpD,EAAD,KACGiD,EAAcb,IAAIC,GAEfa,EAAAC,EAAAC,cAAChD,EAAD,CAEEG,SAAU8B,EAAO9B,SACjBgD,QAAS,IAAMtC,KAAKiB,aAAaG,EAAOR,KAEvCQ,EAAOL,YCxHxB,MAAMwB,EAAcC,SAASC,eAAe,QAC5CC,IAASX,OAAOE,EAAAC,EAAAC,cAACQ,EAAD,MAASJ","file":"static/js/main.5a180ded.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport './styles.css'\n\nconst TarefaList = styled.ul`\n  padding: 0;\n  width: 200px;\n  \n`\n\nconst Tarefa = styled.li`\n  text-align: left;\n  text-decoration: ${({completa}) => (completa ? 'line-through' : 'none')};\n  \n`\n\nconst InputsContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  gap: 10px;\n  \n`\n\nclass App extends React.Component {\n    state = {\n        tarefas: [\n       // {\n         // id: Date.now(),//gera um id para cada tarefa\n         // texto: '',\n         // completa: false, //indica se a tarefa estÃ¡ completa\n        //}, \n        \n      ],\n      inputValue: '',\n      filter: ''\n    };\n\n  componentDidUpdate() {\n\n  };\n\n  componentDidMount() {\n\n  };\n\n  onChangeInput = (event) => { \n    this.setState({ inputValue: event.target.value})\n  }\n\n  criaTarefa = () => {//onclick\n    const novaTarefa = {\n      id: Date.now(),\n      texto: this.state.inputValue,\n      completa: false,\n    } \n    const novaListaTarefas = [...this.state.tarefas, novaTarefa];\n    \n     this.setState({ tarefas: novaListaTarefas});\n     this.state.inputValue = \"\";\n  }\n\n  selectTarefa = (id) => {//passar por todos ids da array, quando for igual o id do on click esse vai ter que riscar. if tarefa.id === id, tarefa.id = true, colocar em um novo array e dar um set state\n  \n   const listaTarefasCompletas = this.state.tarefas.map((tarefa, index, array) => {\n     if(id === tarefa.id) {\n       const tarefasCompletas = {\n\n        ...tarefa,\n        completa: !tarefa.completa\n       \n       }\n       console.log(tarefasCompletas)\n       return tarefasCompletas\n     } else {\n       return tarefa\n     }\n  })\n\n  this.setState({tarefas: listaTarefasCompletas})\n  }\n\n  onChangeFilter = (event) => {\n    this.setState({ filter: event.target.value})\n  }\n\n  render() {\n    console.log(this.state.tarefas)\n    const listaFiltrada = this.state.tarefas\n      .filter(tarefa => {\n        switch (this.state.filter) {\n          case 'pendentes':\n            return !tarefa.completa//se estiver como pendente retorna como false o elemento completa\n          case 'completas':\n            return tarefa.completa//se estiver como completa, retorna como true o completa\n          default:\n            return true\n        }\n      })\n\n    return (\n      <div className=\"App\">\n        <h1>Lista de tarefas</h1>\n        <InputsContainer>\n          <input value={this.state.inputValue} onChange={this.onChangeInput}/>\n          <button onClick={this.criaTarefa}>Adicionar</button>\n        </InputsContainer>\n        <br/>\n\n        <InputsContainer>\n          <label>Filtro</label>\n          <select value={this.state.filter} onChange={this.onChangeFilter}>\n            <option value=\"\">Nenhum</option>\n            <option value=\"pendentes\">Pendentes</option>\n            <option value=\"completas\">Completas</option>\n          </select>\n        </InputsContainer>\n        <TarefaList>\n          {listaFiltrada.map(tarefa => {\n            return (\n              <Tarefa\n               \n                completa={tarefa.completa}\n                onClick={() => this.selectTarefa(tarefa.id)}//() => (serve para que nao clique direto, antes leia o vazio e depois rosee)\n              >\n                {tarefa.texto}\n              </Tarefa>\n            )\n          })}\n        </TarefaList>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}