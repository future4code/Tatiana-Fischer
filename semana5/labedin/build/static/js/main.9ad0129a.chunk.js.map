{"version":3,"sources":["imagens/euppp.jpg","components/CardGrande/CardGrande.js","components/ImagemButton/ImagemButton.js","components/CardPequeno/CardPequeno.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CardGrande","props","className","src","imagem","nome","descricao","ImagemButton","texto","CardPequeno","titulo","App","euFoto","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,mC,wNCe5BC,MAZf,SAAoBC,GAChB,OACI,yBAAKC,UAAU,qBACX,yBAAKC,IAAMF,EAAMG,SACjB,6BACI,4BAAMH,EAAMI,MACZ,2BAAKJ,EAAMK,c,MCIZC,MAVf,SAAsBN,GAClB,OACI,yBAAKC,UAAU,0BACX,yBAAKC,IAAMF,EAAMG,SACjB,2BAAKH,EAAMO,S,MCORC,MAXf,SAAqBR,GACjB,OACI,yBAAKC,UAAU,uBACX,yBAAKC,IAAMF,EAAMG,SACjB,4BAAMH,EAAMS,QACZ,2BAAKT,EAAMO,S,gBCqFRG,MAtFf,WACE,OACE,yBAAKT,UAAU,OACb,yBAAKA,UAAU,0BACb,qCACA,kBAAC,EAAD,CACEE,OAASQ,IACTP,KAAK,2BACLC,UAAU,8HAGZ,kBAAC,EAAD,CACEF,OAAO,0DACPI,MAAM,cAIV,yBAAKN,UAAU,0BACb,kBAAC,EAAD,CACEE,OAAO,0EACPM,OAAO,SACPF,MAAM,mCAKV,yBAAKN,UAAU,0BACb,kBAAC,EAAD,CACEE,OAAO,yFACPM,OAAO,eACPF,MAAM,8CAMV,yBAAKN,UAAU,0BACb,6DAEA,kBAAC,EAAD,CACEE,OAAO,6GACPC,KAAK,qBACLC,UAAU,6CAGZ,kBAAC,EAAD,CACEF,OAAO,4EACPC,KAAK,2BACLC,UAAU,mDAGV,kBAAC,EAAD,CACAF,OAAO,+GACPC,KAAK,6BACLC,UAAU,kFAGZ,kBAAC,EAAD,CACEF,OAAO,gFACPC,KAAK,sBACLC,UAAU,2GAMd,yBAAKJ,UAAU,0BACb,oDACC,uBAAGW,KAAK,mEACN,kBAAC,EAAD,CACDT,OAAO,4EACPI,MAAM,aAHP,KAOD,uBAAGK,KAAK,qCACR,kBAAC,EAAD,CACET,OAAO,0EACPI,MAAM,gBCzEIM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9ad0129a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/euppp.871896f1.jpg\";","import React from 'react';\nimport './CardGrande.css'\n\nfunction CardGrande(props) {\n    return (\n        <div className=\"bigcard-container\">\n            <img src={ props.imagem } />\n            <div>\n                <h4>{ props.nome }</h4>\n                <p>{ props.descricao }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default CardGrande; ","import React from 'react';\nimport './ImagemButton.css'\n\nfunction ImagemButton(props) {\n    return (\n        <div className=\"image-button-container\">\n            <img src={ props.imagem }/>\n            <p>{ props.texto }</p>\n        </div>\n\n    )\n}\n\nexport default ImagemButton;","import React from 'react';\r\nimport './CardPequeno.css'\r\n\r\nfunction CardPequeno(props) {\r\n    return (\r\n        <div className=\"smallCard-container\">\r\n            <img src={ props.imagem } />\r\n            <h5>{ props.titulo }</h5>\r\n            <p>{ props.texto }</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPequeno;","import React from 'react'; \nimport './App.css';\nimport CardGrande from './components/CardGrande/CardGrande';\nimport ImagemButton from './components/ImagemButton/ImagemButton';\nimport CardPequeno from './components/CardPequeno/CardPequeno';\nimport euFoto from './imagens/euppp.jpg'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"page-section-container\">\n        <h2>Sobre</h2>\n        <CardGrande \n          imagem={ euFoto }\n          nome=\"Tatiana Fagundes Fischer\" \n          descricao=\"Olá, meu nome é Tatiana, sou advogada apaixonada por meio ambiente e sustentabilidade, inovação e tecnologia!\"\n        />\n        \n        <ImagemButton \n          imagem=\"https://image.flaticon.com/icons/png/512/117/117472.png\" \n          texto=\"Ver mais\"\n        />\n      </div>\n\n      <div className=\"page-section-container\">\n        <CardPequeno\n          imagem=\"https://cdn.pixabay.com/photo/2016/06/13/17/30/mail-1454731_960_720.png\" \n          titulo=\"Email:\"\n          texto=\"tatiana.fischer@acad.pucrs.br\"\n        />\n      </div>\n        \n          \n      <div className=\"page-section-container\">\n        <CardPequeno\n          imagem=\"https://cdn.pixabay.com/photo/2016/10/08/18/35/the-location-of-the-1724293_960_720.png\" \n          titulo=\"Endereço:\"\n          texto=\"Rua Condado da Paz, 123, Bairro Floresta\"\n        />\n      </div>\n          \n        \n\n      <div className=\"page-section-container\">\n        <h2>Experiências profissionais</h2>        \n        \n        <CardGrande \n          imagem=\"https://uploads-ssl.webflow.com/5e790d30d198385b09366d8f/5eab0c8d3b34bcc0f12f3ddc_avatar_labenu_branco.png\" \n          nome=\"Desenvolvedora Web\" \n          descricao=\"Bootcamp pela Labenu - [abr/2019 - hoje]\" \n        />\n        \n        <CardGrande \n          imagem=\"https://s.oab.org.br/imagens/marcas-oab/oab/positiva/fb/cfoab-300x300.png\" \n          nome=\"Advogada, OAB nºxxxxx\" \n          descricao=\"Formada pela PUCRS em 2018 - [out/2018 - hoje]\" \n        />\n\n          <CardGrande \n          imagem=\"https://storage.googleapis.com/atados-v3/user-uploaded/images-large/c4410f60-95c3-4aee-90fb-5e89cee4fc39.png\" \n          nome=\"Instituto Lixo Zero Brasil\" \n          descricao=\"Embaixadora Lixo Zero - organizei o evento Semana Lixo Zero Porto Alegre/2019\" \n        />\n\n        <CardGrande \n          imagem=\"https://pbs.twimg.com/profile_images/1121497311715241984/5x-0FoHR_400x400.png\" \n          nome=\"Posto Escola Ajuris\" \n          descricao=\"Exerci, voluntariamente, as funções de conciliadora e de juíza leiga - [ago/2018 - ago/2019]\" \n        />\n\n      \n      </div>\n\n      <div className=\"page-section-container\">\n        <h2>Minhas redes sociais</h2>\n         <a href=\"https://www.linkedin.com/in/tatiana-fagundes-fischer-0353301a7/\">\n           <ImagemButton \n          imagem=\"https://cdn.pixabay.com/photo/2016/11/18/11/16/social-1834011_960_720.png\" \n          texto=\"Linkedin\"\n          \n        /> </a>   \n         \n        <a href=\"https://github.com/TatianaFischer\">\n        <ImagemButton \n          imagem=\"https://cdn.pixabay.com/photo/2017/08/05/11/24/logo-2582757_960_720.png\" \n          texto=\"Git Hub\" \n        /></a>       \n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}